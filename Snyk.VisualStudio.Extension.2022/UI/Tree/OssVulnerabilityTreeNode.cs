using System.Collections.Generic;
using Snyk.VisualStudio.Extension.Language;

namespace Snyk.VisualStudio.Extension.UI.Tree
{
    /// <summary>
    /// Scan vulnerability tree node.
    /// If Issue is null that means it's a root node. Otherwise, a child node
    /// </summary>
    public class OssVulnerabilityTreeNode : TreeNode
    {
        /// <summary>
        /// Gets a value indicating whether title.
        /// If it's parent title it display project name with target CLI file.
        /// If it's leaf node it's display vulnerability package name and title.
        /// </summary>
        public override string Title
        {
            get
            {
                var title = string.Empty;

                if (this.IssueList != null)
                {
                    title = this.ProjectName.Replace("/", "\\") + "\\" + this.DisplayTargetFile;
                }

                if (this.Issue != null)
                {
                    title = this.Issue.GetPackageNameTitle();
                }

                return title;
            }
        }

        /// <summary>
        /// Gets a value indicating whether icon for node.
        /// If it's parent node it will get package manager icon.
        /// If it's leaf node it will display vulnerability severity icon.
        /// </summary>
        public override string Icon
        {
            get
            {
                if (this.Issue != null)
                {
                    return SnykIconProvider.GetSeverityIcon(this.Issue.Severity);
                }

                return SnykIconProvider.GetPackageManagerIcon(this.PackageManager);
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether package manager name.
        /// </summary>
        public string PackageManager { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether project name.
        /// </summary>
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether display target file.
        /// </summary>
        public string DisplayTargetFile { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether Vulnerability for this node.
        /// </summary>
        public IEnumerable<Issue> IssueList { get; set; }
        public Issue Issue { get; set; }
    }
}
