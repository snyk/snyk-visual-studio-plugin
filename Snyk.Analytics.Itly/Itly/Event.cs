// 
// Event.cs
// 
// This file is auto-generated by Amplitude.
// To update run 'ampli pull visual-studio-plugin'
// 
// Questions? We're here to help:
// https://developers.data.amplitude.com/dotnet
// 

using System.Collections.Generic;

namespace Iteratively
{
    /// <summary>
    /// Base class for all Events.
    /// </summary>
    public abstract class Event : Properties
    {
        internal string Name { get; }
        internal string Schema { get; }

        protected Event(string name, string schema, Dictionary<string, object> properties = null)
            : base(properties)
        {
            Name = name;
            Schema = schema;
        }

        public override bool Equals(object obj)
        {
            if (obj == null || GetType() != obj.GetType())
                return false;

            var other = (Event) obj;

            return Name == other.Name
                && Schema == other.Schema
                && base.Equals(other as Properties);
        }

        public override int GetHashCode() =>
            Name.GetHashCode() + Schema.GetHashCode() + base.GetHashCode();
    }
}