<UserControl x:Class="Snyk.VisualStudio.Extension.UI.Tree.SnykFilterableTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:local="clr-namespace:Snyk.VisualStudio.Extension.UI.Tree"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TreeView Grid.Row="1" Name="vulnerabilitiesTree"  SelectedItemChanged="VulnerabilitiesTree_SelectedItemChanged"
                  Style="{DynamicResource {x:Static vsfx:VsResourceKeys.ThemedDialogTreeViewStyleKey}}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                  ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                  VerticalContentAlignment="Stretch" 
                  ScrollViewer.CanContentScroll="True" UseLayoutRounding="False">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsRoot}" Value="true">
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsRoot}" Value="false">
                            <Setter Property="FontWeight" Value="Normal"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Style.Resources>
                                                    <ResourceDictionary />
                                                </Style.Resources>
                                                <Setter Property="UIElement.Focusable" Value="False"/>
                                                <Setter Property="FrameworkElement.Width" Value="16"/>
                                                <Setter Property="FrameworkElement.Height" Value="16"/>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                                <Path Fill="#FFFFFFFF" Stroke="#FF818181" Name="ExpandPath">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z"/>
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                    <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF595959</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF262626</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF27C7F7</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FFCCEEFB</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="UIElement.IsMouseOver" Value="True"/>
                                                                        <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF1CC4F7</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF82DFFB</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                         Padding="{TemplateBinding Control.Padding}"
                                         BorderBrush="{TemplateBinding Border.BorderBrush}"
                                         Background="{TemplateBinding Panel.Background}"
                                         Name="Bd"
                                         SnapsToDevicePixels="True"
                                         Grid.Column="1">
                                        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}"
                                                   ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                   ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                   ContentSource="Header"
                                                   Name="PART_Header"
                                                   HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                   SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter Name="ItemsHost"
                                             Grid.Column="1"
                                             Grid.Row="1"
                                             Grid.ColumnSpan="2"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                        <Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems" Value="False">
                                        <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TreeViewItem.IsExpanded" Value="True"/>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type local:TreeNode}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal" Height="19">
                        <Image x:Name="icon" SnapsToDevicePixels="True" Margin="0, 0, 5, 0"  
                               Width="16" Height="16"
                               Source="{Binding Icon}"/>
                        <TextBlock Text="{Binding Title}" 
                                   ToolTipService.ToolTip="{Binding Title}" 
                                   Foreground="{DynamicResource VsBrush.WindowText}" 
                                   IsEnabled="{Binding Enabled}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>
